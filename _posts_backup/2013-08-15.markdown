---
layout: post
---

The expression problem is one of those things that I only subconsiously
recignized as a problem. I always thought of it as sign that I was doing
something seriously wrong and needed to come up with a different way of
doing whatever I was trying to do.

The expression problem is something that some people might not consider to be an
actual problem. Personally, (and this may be relatable by others), I didn't
even realize that there _was_ a problem before being enlightened. I always
thought that the "solution" I had been employing was just how things were done.

Before I get ahead of myself, an explanation of what I'm talking about is
probably required. [Wikipedia](https://en.wikipedia.org/wiki/Expression_Problem)
has some information, but I found [this article](http://c2.com/cgi/wiki?ExpressionProblem) by Cunningham & Cunningham to be particularly helpful. The latter provides a good
pseudo example, but I've found other cases of the expression problem during
day-to-day programing.

The problem, (for me, at least) comes into play when I want to add some
behavior to an object but I:
1. Don't want to break existing functionality
2. Can't because it's a third party library

I use PHP and Javascript primarily at work, so when I say "Can't" I actually
mean I "really, really, really don't want to." Your philosophy may differ, but
It's generally considered a bad practice to start patching third party code. If
you were working in a compiled language, then there is a very good chance that
you actually wouldn't be able to open up that third party code.

There are different solutions (workarounds) for this problem, most of which
simply side-step the issue, each with their own advantages and disadvantages.
I'd like to show you an example of each one in (_gasp_) Java:t
