<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="en-US" xmlns:media="http://search.yahoo.com/mrss/" xmlns="http://www.w3.org/2005/Atom">
 
  <title>mcramm.com</title>
  <link href="http://mcramm.com/"/>
  <link type="application/atom+xml" rel="self" href="http://mcramm.com/atom.xml"/>
  <updated>2011-10-15T10:32:07-06:00</updated>
  <id>http://mcramm.com/</id>
  <author>
    <name>Michael Cramm</name>
    <email>mike@mcramm.com</email>
  </author>

  
  <entry>
    <id>http://mcramm.com/2011/10/16/vim-reboot-3</id>
    <link type="text/html" rel="alternate" href="http://mcramm.com/2011/10/16/vim-reboot-3.html"/>
    <title>Vim Reboot 3</title>
    <updated>2011-10-16T00:00:00-06:00</updated>
    <author>
      <name>Michael Cramm</name>
      <uri>http://mcramm.com/</uri>
    </author>
    <content type="html">&lt;h3 id='line_numbers'&gt;Line Numbers&lt;/h3&gt;

&lt;p&gt;By default vim doesn&amp;#8217;t show line numbers. I prefer having this as it can make finding the source of exceptions slightly easier, and you waste less time by telling the person you&amp;#8217;re pairing with to go to line 12 instead of pointing at their monitor like an ape.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;    &lt;span class='nb'&gt;set &lt;/span&gt;number
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id='whitespace'&gt;Whitespace&lt;/h3&gt;

&lt;p&gt;This section is pretty self-explanatory; it tells vim how to deal with whitespace.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;    &lt;span class='nb'&gt;set &lt;/span&gt;nowrap

    &lt;span class='nb'&gt;set &lt;/span&gt;&lt;span class='nv'&gt;tabstop&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;2
    &lt;span class='nb'&gt;set &lt;/span&gt;&lt;span class='nv'&gt;shiftwidth&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;2
    &lt;span class='nb'&gt;set &lt;/span&gt;&lt;span class='nv'&gt;softtabstop&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;2
    &lt;span class='nb'&gt;set &lt;/span&gt;expandtab
    &lt;span class='nb'&gt;set &lt;/span&gt;autoindent
    &lt;span class='nb'&gt;set &lt;/span&gt;smartindent
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;nowrap&lt;/code&gt; tells vim not to wrap long lines of code.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tabstop&lt;/code&gt; tells vim how many columns a tab counts for. Most of the work I do is in ruby, and the standard there is 2 spaces.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;shiftwidth&lt;/code&gt; tells vim how many columns text is re-indented with when doing &amp;#171;&amp;#160;and&amp;#160;&amp;#187;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;softabstop&lt;/code&gt; controls how many columns vim uses when you hit the tab key.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;expandtab&lt;/code&gt; tells vim to use the appropriate number of spaces to insert when hitting tab.&lt;/p&gt;

&lt;p&gt;Find the last few settings a little confusing? &lt;a href='http://tedlogan.com/techblog3.html'&gt;Check out this site&lt;/a&gt; for &lt;em&gt;little&lt;/em&gt; bit better explanation. At work, we use PHP, and our standard is 4 spaces of indentation instead of 2. You can override these settings on a per file type basis by creating a &lt;em&gt;filetype&lt;/em&gt;.vim in &lt;code&gt;~/.vim/after/ftplugin&lt;/code&gt;. For example, I have a &lt;code&gt;php.vim&lt;/code&gt; file with the following:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;    setlocal &lt;span class='nv'&gt;tabstop&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;4
    setlocal &lt;span class='nv'&gt;shiftwidth&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;4
    setlocal &lt;span class='nv'&gt;tabstop&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;4
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;autoindent&lt;/code&gt; simply copies the indentation of the previous line when starting a new one.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;smartindent&lt;/code&gt; automatically inserts one extra level of indentation in certain cases.&lt;/p&gt;

&lt;p&gt;There is one last thing I like to do that picked up from the &lt;a href='https://github.com/carlhuda/janus'&gt;Janus&lt;/a&gt; vim configuration: &lt;div class='highlight'&gt;
&lt;pre&gt;
&lt;code class='bash'&gt;
    &lt;span class='nb'&gt;set &lt;/span&gt;list &lt;span class='nv'&gt;listchars&lt;/span&gt;=tab:&lt;span class='se'&gt;\ \ &lt;/span&gt;,trail:&amp;middot;
&lt;/code&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;This tells vim to put a trailing character, &lt;code&gt;&amp;middot;&lt;/code&gt; in place of any trailing whitespace. Again, this is more of a personal preference. I tend to be pretty obsseive about leaving my code and commits looking pretty.&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <id>http://mcramm.com/2011/10/09/vim-reboot-2</id>
    <link type="text/html" rel="alternate" href="http://mcramm.com/2011/10/09/vim-reboot-2.html"/>
    <title>Vim Reboot 2</title>
    <updated>2011-10-09T00:00:00-06:00</updated>
    <author>
      <name>Michael Cramm</name>
      <uri>http://mcramm.com/</uri>
    </author>
    <content type="html">&lt;p&gt;In my &lt;a href='/2011/10/02/vim-reboot-1.html'&gt;last post&lt;/a&gt; I installed MacVim and setup some very basic options specifically for it. For the next few posts, I&amp;#8217;ll be focusing on features that can be applied to the more common, server-side version.&lt;/p&gt;

&lt;h3 id='syntax_highlighting'&gt;Syntax Highlighting&lt;/h3&gt;

&lt;p&gt;The first thing I wanted to have was some syntax highlighting.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;    &lt;span class='nb'&gt;set &lt;/span&gt;&lt;span class='nv'&gt;t_Co&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;256
    colorscheme mike_wombat

    syntax &lt;span class='nb'&gt;enable&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;set t_Co=256&lt;/code&gt; sets vim up to run in 256 color mode (I use &lt;a href='http://www.iterm2.com/#/section/home'&gt;iTerm 2&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;colorscheme mike_wombat&lt;/code&gt; sets the colors scheme to a slightly customized version of the wombat color scheme. Like the ir_black theme from my previous post, this can be found &lt;a href='https://github.com/mcramm/dotfiles/blob/master/vim/colors/mike_wombat.vim'&gt;here&lt;/a&gt;. Just move it into &lt;code&gt;~/.vim/colors&lt;/code&gt; to use it.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;syntax enable&lt;/code&gt; enables syntax highlighting.&lt;/p&gt;

&lt;h3 id='backup_directory'&gt;Backup Directory&lt;/h3&gt;

&lt;p&gt;Vim keeps a backup of any files you open in the form of &lt;em&gt;filename&lt;/em&gt;.swp. If your vim session crashes, or the connection to your server times out, then you can use this file to recover any edits you&amp;#8217;ve made.&lt;/p&gt;

&lt;p&gt;The problem is that these files can sometimes get in the way. The most common complaint I hear is with these files getting included as part of a commit to a repository.&lt;/p&gt;

&lt;p&gt;Some people choose to turn this feature off completely and not have these backups created at all. I think that these backups can be valuable and prefer to simply have them written to a different directory.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;    &lt;span class='nb'&gt;set &lt;/span&gt;&lt;span class='nv'&gt;backupdir&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;~/.vim/backup
    &lt;span class='nb'&gt;set &lt;/span&gt;&lt;span class='nv'&gt;directory&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;~/.vim/backup
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Any backup files will now be created in &lt;code&gt;~/.vim/backup&lt;/code&gt;. You may need to make the directory manually before the feature will work (though you should get prompted with an error when launching vim).&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <id>http://mcramm.com/2011/10/02/vim-reboot-1</id>
    <link type="text/html" rel="alternate" href="http://mcramm.com/2011/10/02/vim-reboot-1.html"/>
    <title>Vim Reboot 1</title>
    <updated>2011-10-02T00:00:00-06:00</updated>
    <author>
      <name>Michael Cramm</name>
      <uri>http://mcramm.com/</uri>
    </author>
    <content type="html">&lt;p&gt;Over the past few years my Vim configuration has gotten out of hand. I&amp;#8217;ve tried to maintain it as best I can, but its time for a reboot. I was inspired by Avdi Grimm&amp;#8217;s recent &lt;a href='
http://avdi.org/devblog/category/emacs-reboot/'&gt;Emacs Reboot&lt;/a&gt; series and decided to do something similar for Vim.&lt;/p&gt;

&lt;p&gt;I work on a Mac, which means I prefer to use MacVim where possible. The latest snapshot for Snow Leopard can be found at &lt;a href='http://code.google.com/p/macvim/'&gt;http://code.google.com/p/macvim/&lt;/a&gt; and installing is as easy as you would expect. Simply download the snapshot, drag MacVim.app to Applications and move the mvim script to folder in your path:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;sudo mv mvim /usr/bin
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Using &lt;code&gt;mvim&lt;/code&gt; from the command line at this point should launch MacVim as you would expect.&lt;/p&gt;

&lt;p&gt;At this point, you have two options. You can continue with this series of posts on customizing your environment by hand, or you can check out &lt;a href='https://github.com/carlhuda/janus'&gt;Janus&lt;/a&gt; and get a very good default configuration. I used this initially and copied a bit of my configuration directly from it.&lt;/p&gt;

&lt;p&gt;The first thing I wanted to do was fix the (ugly) default color scheme and setup MacVim to work in full screen mode.&lt;/p&gt;

&lt;p&gt;Create a &lt;code&gt;.gvimrc&lt;/code&gt; file:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;touch ~/.gvimrc
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;And add the following to it:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;&lt;span class='k'&gt;if &lt;/span&gt;has&lt;span class='o'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;gui_macvim&amp;quot;&lt;/span&gt;&lt;span class='o'&gt;)&lt;/span&gt;
    &lt;span class='s2'&gt;&amp;quot; Make fullscreen mode take up the full screen&lt;/span&gt;
&lt;span class='s2'&gt;    set fuoptions=maxhorz,maxvert&lt;/span&gt;

&lt;span class='s2'&gt;    &amp;quot;&lt;/span&gt;&lt;span class='nb'&gt;set &lt;/span&gt;the font
    &lt;span class='nb'&gt;set &lt;/span&gt;&lt;span class='nv'&gt;guifont&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;Menlo:h10

    &lt;span class='s2'&gt;&amp;quot; Command-Return toggles full screen mode&lt;/span&gt;
&lt;span class='s2'&gt;    macmenu Window.Toggle\ Full\ Screen\ Mode key=&amp;lt;D-CR&amp;gt;&lt;/span&gt;
&lt;span class='s2'&gt;endif&lt;/span&gt;

&lt;span class='s2'&gt;&amp;quot;&lt;/span&gt; Start with the toolbar hidden
&lt;span class='nb'&gt;set &lt;/span&gt;guioptions-&lt;span class='o'&gt;=&lt;/span&gt;T

&lt;span class='err'&gt;&amp;quot;&lt;/span&gt; Set the color scheme
&lt;span class='nb'&gt;set &lt;/span&gt;&lt;span class='nv'&gt;background&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;dark
color ir_black
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Substitute the &amp;#8220;Menlo&amp;#8221; font and &amp;#8220;ir_black&amp;#8221; color scheme with the font/scheme of your preference.&lt;/p&gt;

&lt;p&gt;Menlo should be available on your Mac if you have Snow Leopard. If you don&amp;#8217;t have it, then you should try out &lt;a href='http://ftp.gnome.org/pub/GNOME/sources/ttf-bitstream-vera/1.10/'&gt;Bitstream&lt;/a&gt;. Installation details can be found elsewhere on their website.&lt;/p&gt;

&lt;p&gt;ir_black can be found in a bunch of places, &lt;a href='https://github.com/mcramm/dotfiles/blob/master/vim/colors/ir_black.vim'&gt;the best of which is here&lt;/a&gt;. You can use this scheme by doing:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;  mkdir -p ~/.vim/colors
  mv ir_black.vim ~/.vim/colors/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Running &lt;code&gt;mvim&lt;/code&gt; from the command line should present the following:&lt;/p&gt;

&lt;p&gt;&lt;img alt='Vim' src='https://lh6.googleusercontent.com/-ntdKpA-y-dI/ToZhZlaVFMI/AAAAAAAAAsE/8PJ663BY_1E/vim1.png' /&gt;&lt;/p&gt;

&lt;p&gt;Next I&amp;#8217;ll start setting up some standard vim options and a couple of custom mappings I use quite frequently.&lt;/p&gt;</content>
  </entry>
  
  <entry>
    <id>http://mcramm.com/2011/09/30/paramater-nam</id>
    <link type="text/html" rel="alternate" href="http://mcramm.com/2011/09/30/paramater-nam.html"/>
    <title>Parameter Nam</title>
    <updated>2011-09-30T00:00:00-06:00</updated>
    <author>
      <name>Michael Cramm</name>
      <uri>http://mcramm.com/</uri>
    </author>
    <content type="html">&lt;p&gt;I recently finished a project to improve the design of the account statements our customers print off for patients. The new design was pretty heavy and I was going to need to draw a lot of variable-length text that could be aligned to the left, right or center.&lt;/p&gt;

&lt;p&gt;We use a library called &lt;a href='http://framework.zend.com/manual/en/zend.pdf.html'&gt;Zend&lt;/a&gt; to generate all of our PDFs, and it has served us well so far. The problem is that all of the previous projects used it pretty lightly and there weren&amp;#8217;t any methods written that would help with such a dynamic design. This meant I was going to have to write a lot of the code myself, (which is fine since I &lt;strong&gt;am&lt;/strong&gt; a software developer), but would probably take the project past the deadline our clients were expecting. As the day approached, we began to feel more and more pressure to ship the feature and the code suffered because of it.&lt;/p&gt;

&lt;p&gt;The following is a small excerpt from the class responsible for drawing text to the page. Note that the original project was done in php. I&amp;#8217;ve transposed it to ruby for the sake of simplicity and because I couldn&amp;#8217;t get Pygments to syntax highlight php code nicely.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;drawStaticText&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;text&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;x&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;y&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;page&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='mi'&gt;0&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;html_color&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;#000000&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;fontSize&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='mi'&gt;0&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='n'&gt;fontSize&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;fontSize&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt; &lt;span class='mi'&gt;0&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;?&lt;/span&gt; &lt;span class='nb'&gt;self&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;fontSize&lt;/span&gt; &lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='n'&gt;fontSize&lt;/span&gt;
    &lt;span class='n'&gt;getPage&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;page&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;

    &lt;span class='n'&gt;setColor&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;html_color&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='nb'&gt;self&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;page&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;setFont&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;getFont&lt;/span&gt;&lt;span class='p'&gt;(),&lt;/span&gt; &lt;span class='n'&gt;fontSize&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;

    &lt;span class='nb'&gt;self&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;page&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;drawText&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;text&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;x&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;y&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;UTF-8&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;

&lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;drawCenteredText&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;text&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;x&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;y&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;page&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;html_color&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;#000000&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;fontSize&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='mi'&gt;0&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='n'&gt;fontSize&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;fontSize&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt; &lt;span class='mi'&gt;0&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;?&lt;/span&gt; &lt;span class='nb'&gt;self&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;fontSize&lt;/span&gt; &lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='n'&gt;fontSize&lt;/span&gt;

    &lt;span class='n'&gt;width&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;getTextWidth&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;text&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;getFont&lt;/span&gt;&lt;span class='p'&gt;(),&lt;/span&gt; &lt;span class='n'&gt;fontSize&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='n'&gt;x&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;x&lt;/span&gt; &lt;span class='o'&gt;-&lt;/span&gt; &lt;span class='n'&gt;width&lt;/span&gt; &lt;span class='o'&gt;/&lt;/span&gt; &lt;span class='mi'&gt;2&lt;/span&gt;

    &lt;span class='n'&gt;drawStaticText&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;text&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;x&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;y&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;page&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;html_color&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;fontSize&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;

&lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;drawRightAlignedText&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;text&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;x&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;y&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;page&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;html_color&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;#000000&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;fontSize&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='mi'&gt;0&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='n'&gt;fontSize&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;fontSize&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt; &lt;span class='mi'&gt;0&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;?&lt;/span&gt; &lt;span class='nb'&gt;self&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;fontSize&lt;/span&gt; &lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='n'&gt;fontSize&lt;/span&gt;

    &lt;span class='n'&gt;width&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;getTextWidth&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;text&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;getFont&lt;/span&gt;&lt;span class='p'&gt;(),&lt;/span&gt; &lt;span class='n'&gt;fontSize&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='n'&gt;x&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;x&lt;/span&gt; &lt;span class='o'&gt;-&lt;/span&gt; &lt;span class='n'&gt;width&lt;/span&gt;

    &lt;span class='n'&gt;drawStaticText&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;text&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;x&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;y&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;page&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;html_color&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;fontSize&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Yikes, look at that mess! I can see at least 3 things wrong here:&lt;/p&gt;

&lt;h3 id='1_code_duplication'&gt;1. Code Duplication&lt;/h3&gt;

&lt;p&gt;Each of these methods are overly similar. I&amp;#8217;m defaulting &lt;code&gt;fontSize&lt;/code&gt; in all three, and I&amp;#8217;m calling &lt;code&gt;getTextWidth()&lt;/code&gt; in the bottom two.&lt;/p&gt;

&lt;h3 id='2_poorly_named_methods'&gt;2. Poorly named methods&lt;/h3&gt;

&lt;p&gt;The names of these methods aren&amp;#8217;t consistent, nor do I feel the correctly convey what they&amp;#8217;re doing. The person implementing this code might not have a problem understanding what &lt;code&gt;drawCenteredText&lt;/code&gt;, does, but it would feel inconsistent next to &lt;code&gt;drawRightAlignedText&lt;/code&gt;. And why the word &amp;#8220;Static&amp;#8221; in &lt;code&gt;drawStaticText&lt;/code&gt;? What does that imply about the method?&lt;/p&gt;

&lt;h3 id='3_parameter_hell'&gt;3. Parameter Hell&lt;/h3&gt;

&lt;p&gt;There are &lt;em&gt;way&lt;/em&gt; too many parameters being passed around here. Some people regard the passing of anything more than 2 parameters to a method as a code smell, and I tend to agree. The more parameters you pass into a method makes it harder to test, looks messy, and generally create brittle code. Sometimes there is no way around it, but you should try to avoid it where possible.&lt;/p&gt;

&lt;p&gt;My focus for the remainder of this post will be in reducing the number of parameters being used. &lt;code&gt;self.page.drawText()&lt;/code&gt; is off-limits since that&amp;#8217;s the call to actual library. Everything else is fair game.&lt;/p&gt;

&lt;p&gt;I recently got Martin Fowler&amp;#8217;s &amp;#8220;Refactoring: Improving the Design of Existing Code&amp;#8221;, and it has been an amazing reference for refactorings like this. On page 295, it details the process of replacing a number of parameters sent to a method with a parameter &lt;em&gt;object&lt;/em&gt; instead:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Often you see a particular group of parameters that tend to be passed together. Several methods may use this group, either on one class or in several classes. Such a group of classes is a data clump that can be replaced with an object that carries all of this data.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Moving these parameters into an object, and passing it in instead, feels like the right way to go. I should also be able to add the offset calculation required for centered/right aligned text onto the object, and remove that responsibility from the code higher up. I&amp;#8217;m still going to have a problem with building the object itself, but I should be able to initialize it with a hash and reduce the chances of it being implemented incorrectly in the future.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;TextObject&lt;/span&gt;
    &lt;span class='no'&gt;ATTRIBUTES&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='o'&gt;[&lt;/span&gt;
        &lt;span class='ss'&gt;:value&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ss'&gt;:x&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ss'&gt;:y&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ss'&gt;:alignment&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ss'&gt;:color&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ss'&gt;:font_size&lt;/span&gt;
    &lt;span class='o'&gt;].&lt;/span&gt;&lt;span class='n'&gt;freeze&lt;/span&gt;

    &lt;span class='no'&gt;ATTRIBUTES&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;each&lt;/span&gt; &lt;span class='k'&gt;do&lt;/span&gt; &lt;span class='o'&gt;|&lt;/span&gt;&lt;span class='kp'&gt;attr&lt;/span&gt;&lt;span class='o'&gt;|&lt;/span&gt;
        &lt;span class='kp'&gt;attr_accessor&lt;/span&gt; &lt;span class='kp'&gt;attr&lt;/span&gt;
    &lt;span class='k'&gt;end&lt;/span&gt;

    &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;initialize&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;args&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='kp'&gt;nil&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
        &lt;span class='no'&gt;ATTRIBUTES&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;each&lt;/span&gt; &lt;span class='k'&gt;do&lt;/span&gt; &lt;span class='o'&gt;|&lt;/span&gt;&lt;span class='kp'&gt;attr&lt;/span&gt;&lt;span class='o'&gt;|&lt;/span&gt;
            &lt;span class='k'&gt;if&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt; &lt;span class='n'&gt;args&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;key?&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='kp'&gt;attr&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;)&lt;/span&gt;
                &lt;span class='nb'&gt;instance_variable_set&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;@&lt;/span&gt;&lt;span class='si'&gt;#{&lt;/span&gt;&lt;span class='kp'&gt;attr&lt;/span&gt;&lt;span class='si'&gt;}&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;args&lt;/span&gt;&lt;span class='o'&gt;[&lt;/span&gt;&lt;span class='kp'&gt;attr&lt;/span&gt;&lt;span class='o'&gt;]&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
            &lt;span class='k'&gt;end&lt;/span&gt;
        &lt;span class='k'&gt;end&lt;/span&gt;
    &lt;span class='k'&gt;end&lt;/span&gt;

    &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;x&lt;/span&gt;
        &lt;span class='k'&gt;return&lt;/span&gt; &lt;span class='n'&gt;x&lt;/span&gt; &lt;span class='k'&gt;unless&lt;/span&gt; &lt;span class='o'&gt;[&lt;/span&gt;&lt;span class='ss'&gt;:right&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ss'&gt;:center&lt;/span&gt;&lt;span class='o'&gt;].&lt;/span&gt;&lt;span class='n'&gt;include?&lt;/span&gt; &lt;span class='nb'&gt;self&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;alignment&lt;/span&gt;
        &lt;span class='k'&gt;return&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nb'&gt;self&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;alignment&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt; &lt;span class='ss'&gt;:right&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;?&lt;/span&gt; &lt;span class='n'&gt;calculateOffsetForRight&lt;/span&gt; &lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='n'&gt;calculateOffsetForCenter&lt;/span&gt;
    &lt;span class='k'&gt;end&lt;/span&gt;

    &lt;span class='kp'&gt;private&lt;/span&gt;

    &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;calculateOffsetForRight&lt;/span&gt;
        &lt;span class='k'&gt;return&lt;/span&gt; &lt;span class='n'&gt;x&lt;/span&gt; &lt;span class='o'&gt;-&lt;/span&gt; &lt;span class='n'&gt;getWidth&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt;
    &lt;span class='k'&gt;end&lt;/span&gt;

    &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;calculateOffsetForCenter&lt;/span&gt;
        &lt;span class='k'&gt;return&lt;/span&gt; &lt;span class='n'&gt;x&lt;/span&gt; &lt;span class='o'&gt;-&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;getWidth&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt; &lt;span class='o'&gt;/&lt;/span&gt; &lt;span class='mi'&gt;2&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='k'&gt;end&lt;/span&gt;

    &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;getWidth&lt;/span&gt;
        &lt;span class='k'&gt;return&lt;/span&gt; &lt;span class='nb'&gt;self&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;value&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;size&lt;/span&gt;
        &lt;span class='c1'&gt;# In reality, this method returns pixel value for the string based on font size / family.&lt;/span&gt;
    &lt;span class='k'&gt;end&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;You can see that this object is pretty small, and while the initialization looks a little complicated, it makes using it so much easier. I can now go ahead and remove replace all of the parameters with this new object. At the same time, I&amp;#8217;ll rename &lt;code&gt;drawStaticText&lt;/code&gt; to &lt;code&gt;drawText&lt;/code&gt; to better reflect what it is doing.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;drawText&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt; &lt;span class='n'&gt;text_obj&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;page&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='mi'&gt;1&lt;/span&gt; &lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='n'&gt;font_size&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;textObj&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;font_size&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt; &lt;span class='mi'&gt;0&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;?&lt;/span&gt; &lt;span class='nb'&gt;self&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;font_size&lt;/span&gt; &lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='n'&gt;text_obj&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;font_size&lt;/span&gt;
    &lt;span class='n'&gt;getPage&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;page&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='n'&gt;setColor&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;text_obj&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;color&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='nb'&gt;self&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;page&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;setFont&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;getFont&lt;/span&gt;&lt;span class='p'&gt;(),&lt;/span&gt; &lt;span class='n'&gt;font_size&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='nb'&gt;self&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;page&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;drawText&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;text_obj&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;value&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;text_obj&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;x&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;text_obj&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;y&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;UTF-8&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Finally this code is starting to shape up. This is what it would look like to use that &lt;code&gt;TextObject&lt;/code&gt;:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='n'&gt;my_text_obj&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='kp'&gt;new&lt;/span&gt; &lt;span class='no'&gt;TextObject&lt;/span&gt;&lt;span class='p'&gt;({&lt;/span&gt;
    &lt;span class='ss'&gt;:value&lt;/span&gt; &lt;span class='o'&gt;=&amp;gt;&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;Draw Me!&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
    &lt;span class='ss'&gt;:x&lt;/span&gt; &lt;span class='o'&gt;=&amp;gt;&lt;/span&gt; &lt;span class='mi'&gt;12&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
    &lt;span class='ss'&gt;:y&lt;/span&gt; &lt;span class='o'&gt;=&amp;gt;&lt;/span&gt; &lt;span class='mi'&gt;100&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
    &lt;span class='ss'&gt;:alignment&lt;/span&gt; &lt;span class='o'&gt;=&amp;gt;&lt;/span&gt; &lt;span class='ss'&gt;:left&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
    &lt;span class='ss'&gt;:color&lt;/span&gt; &lt;span class='o'&gt;=&amp;gt;&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;#000000&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
    &lt;span class='ss'&gt;:font_size&lt;/span&gt; &lt;span class='o'&gt;=&amp;gt;&lt;/span&gt; &lt;span class='mi'&gt;12&lt;/span&gt;
&lt;span class='p'&gt;})&lt;/span&gt;

&lt;span class='n'&gt;my_text_obj&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;x&lt;/span&gt;   &lt;span class='c1'&gt;# =&amp;gt; 12&lt;/span&gt;

&lt;span class='n'&gt;my_text_obj&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;alignment&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='ss'&gt;:right&lt;/span&gt;
&lt;span class='n'&gt;my_text_obj&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;x&lt;/span&gt;   &lt;span class='c1'&gt;# =&amp;gt; 4&lt;/span&gt;

&lt;span class='n'&gt;my_text_obj&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;alignment&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='ss'&gt;:center&lt;/span&gt;
&lt;span class='n'&gt;my_text_obj&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;x&lt;/span&gt;   &lt;span class='c1'&gt;# =&amp;gt; 8&lt;/span&gt;

&lt;span class='n'&gt;drawText&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt; &lt;span class='n'&gt;my_text_obj&lt;/span&gt; &lt;span class='p'&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;I&amp;#8217;m sure that there are other ways to refactor this code even further, but this is fine for the purposes of getting rid of all those crazy parameters. Testing the &lt;code&gt;drawText&lt;/code&gt; method now should be much easier, and I can write tests for the &lt;code&gt;TextObject&lt;/code&gt; as well.&lt;/p&gt;

&lt;p&gt;There are still other areas of this project that could use some refactoring, but thats it for at least this section. At least I can browse through this file without having to enable text-wrapping in vim.&lt;/p&gt;</content>
  </entry>
  

</feed>

